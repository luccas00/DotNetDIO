// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoMVC.Context;

#nullable disable

namespace ProjetoMVC.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoMVC.Entities.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BancoId")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CreditoAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("BancoId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Taxa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Investimentos");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Cliente", b =>
                {
                    b.HasOne("ProjetoMVC.Entities.Banco", null)
                        .WithMany("Clientes")
                        .HasForeignKey("BancoId");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Investimento", b =>
                {
                    b.HasOne("ProjetoMVC.Entities.Banco", null)
                        .WithMany("Ofertas")
                        .HasForeignKey("BancoId");

                    b.HasOne("ProjetoMVC.Entities.Cliente", null)
                        .WithMany("Investimentos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Banco", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("ProjetoMVC.Entities.Cliente", b =>
                {
                    b.Navigation("Investimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
